{"version":3,"sources":["api/github.js","models/details.js","models/index.js","models/profile.js","models/repos.js","translations/index.js","containers/Details/elements.js","components/AnimationLoading/elements.js","components/AnimationLoading/index.jsx","layouts/Main/index.jsx","components/RepoDetails/elements.js","components/RepoDetails/index.jsx","components/RepoInfo/elements.js","components/RepoInfo/index.jsx","containers/Details/index.jsx","containers/Profile/elements.js","components/ProfileNav/elements.js","components/Inputs/elements.js","components/ProfileNav/index.jsx","components/ProfileView/elements.js","components/ProfileView/index.jsx","components/UsernameForm/elements.js","components/UsernameForm/index.jsx","containers/Profile/index.jsx","containers/Repos/elements.js","components/RepoFilter/elements.js","components/RepoFilter/index.jsx","components/RepoList/elements.js","components/RepoList/index.jsx","containers/Repos/index.jsx","App.js","createStore.js","serviceWorker.js","index.js"],"names":["baseUrl","apiFetch","url","options","a","fetch","response","json","data","status","Error","message","fetchUser","username","fetchUserRepos","fetchRepo","owner","repo","createModel","details","name","state","error","reducers","SET_ERROR","SET_DETAILS","effects","dispatch","fetchDetails","id","description","language","license","fork","parent","full_name","errorMessage","profile","SET_PROFILE","fetchProfile","login","bio","avatarUrl","avatar_url","repos","SET_REPOS","fetchRepos","map","fullName","stars","stargazers_count","english","ErrorMessage","styled","p","DetailContainer","div","bounce","keyframes","Bar","CircleWrapper","Circle","BouncingCircle","props","delay","LoadingAnimation","MainLayout","title","loading","children","messages","useIntl","className","AnimationLoading","defaultProps","DataCell","td","last","HeaderCell","th","Table","table","DetailRow","value","RepoDetails","i","key","length","Info","Title","h2","Description","RepoInfo","Details","qs","parse","useLocation","search","ignoreQueryPrefix","useDispatch","useSelector","shallowEqual","shouldFetch","useEffect","ErrorBox","ProfileContainer","Button","button","TextInput","input","attrs","type","ProfileNav","onClose","onOpen","onClick","Avatar","img","Bio","span","Name","ProfileDetails","ViewContainer","ProfileView","src","alt","Label","label","Form","form","FormFooter","LabelContent","LabelText","UsernameForm","onSubmit","initialValues","validationSchema","Yup","max","matches","required","values","formikProps","onReset","handleReset","handleSubmit","errors","touched","as","Profile","navigate","useNavigate","ListContainer","ReposContainer","RepoFilter","onNameChange","onSortChange","onChange","e","target","checked","Body","tbody","Header","thead","RepoDataCell","RepoHeaderCell","RepoLink","StarDataCell","StarHeaderCell","RepoList","onRepo","href","preventDefault","Repos","useState","setOwner","filterName","setFilterName","filterSortStars","setFilterSortStars","mappedRepos","Array","isArray","slice","filter","startsWith","sort","b","sortBy","find","store","plugins","immerPlugin","loadingPlugin","selectPlugin","Rematch","models","createStore","App","Translations","locale","titleTemplate","defaultTitle","style","height","outline","default","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d6e6744e.chunk.js","sourcesContent":["const baseUrl = \"https://api.github.com\";\n\nasync function apiFetch(url, options) {\n  const response = await fetch(baseUrl + url, options);\n  const data = await response.json();\n  if (response.status >= 300) {\n    throw Error(data.message);\n  }\n  return data;\n}\n\nexport function fetchUser(username) {\n  return apiFetch(`/users/${username}`);\n}\n\nexport function fetchUserRepos(username) {\n  return apiFetch(`/users/${username}/repos`);\n}\n\nexport function fetchRepo(owner, repo) {\n  return apiFetch(`/repos/${owner}/${repo}`);\n}\n","import { createModel } from \"@rematch/core\";\nimport { fetchRepo } from \"api/github\";\n\nexport default createModel()({\n  name: \"details\",\n  state: {\n    error: null,\n    details: null,\n  },\n  reducers: {\n    SET_ERROR: (state, error) => ({\n      ...state,\n      error,\n    }),\n    SET_DETAILS: (state, details) => ({\n      ...state,\n      details,\n    }),\n  },\n  effects: (dispatch) => ({\n    async fetchDetails({ username, repo }) {\n      try {\n        const response = await fetchRepo(username, repo);\n        const details = {\n          id: response.id,\n          name: response.name,\n          description: response.description,\n          language: response.language,\n          license: (response.license && response.license.name) || null,\n          fork: response.fork,\n          parent: (response.parent && response.parent.full_name) || null,\n        };\n        dispatch.details.SET_DETAILS(details);\n        dispatch.details.SET_ERROR(null);\n      } catch (e) {\n        let errorMessage = \"containers.details.errors.default\";\n        if (e.message === \"Not Found\") {\n          errorMessage = \"containers.details.errors.notfound\";\n        }\n        dispatch.details.SET_DETAILS(null);\n        dispatch.details.SET_ERROR(errorMessage);\n      }\n    },\n  }),\n});\n","import details from \"./details\";\nimport profile from \"./profile\";\nimport repos from \"./repos\";\n\nexport default {\n  details,\n  profile,\n  repos,\n};\n","import { createModel } from \"@rematch/core\";\nimport { fetchUser } from \"api/github\";\n\nexport default createModel()({\n  name: \"profile\",\n  state: {\n    error: null,\n    profile: null,\n  },\n  reducers: {\n    SET_ERROR: (state, error) => ({\n      ...state,\n      error,\n    }),\n    SET_PROFILE: (state, profile) => ({\n      ...state,\n      profile,\n    }),\n  },\n  effects: (dispatch) => ({\n    async fetchProfile(username) {\n      try {\n        const response = await fetchUser(username);\n        const profile = {\n          login: response.login,\n          name: response.name,\n          bio: response.bio,\n          avatarUrl: response.avatar_url,\n        };\n        dispatch.profile.SET_PROFILE(profile);\n        dispatch.profile.SET_ERROR(null);\n      } catch (e) {\n        let errorMessage = \"containers.profile.errors.default\";\n        if (e.message === \"Not Found\") {\n          errorMessage = \"containers.profile.errors.notfound\";\n        }\n        dispatch.profile.SET_PROFILE(null);\n        dispatch.profile.SET_ERROR(errorMessage);\n      }\n    },\n  }),\n});\n","import { createModel } from \"@rematch/core\";\nimport { fetchUserRepos } from \"api/github\";\n\nexport default createModel()({\n  name: \"repos\",\n  state: {\n    error: null,\n    repos: null,\n  },\n  reducers: {\n    SET_ERROR: (state, error) => ({\n      ...state,\n      error,\n    }),\n    SET_REPOS: (state, repos) => ({\n      ...state,\n      repos,\n    }),\n  },\n  effects: (dispatch) => ({\n    async fetchRepos(username) {\n      try {\n        const response = await fetchUserRepos(username);\n        const repos = response.map((repo) => ({\n          id: repo.id,\n          name: repo.name,\n          fullName: repo.full_name,\n          stars: repo.stargazers_count,\n        }));\n        dispatch.repos.SET_REPOS(repos);\n        dispatch.repos.SET_ERROR(null);\n      } catch (e) {\n        let errorMessage = \"containers.repos.errors.default\";\n        if (e.message === \"Not Found\") {\n          errorMessage = \"containers.repos.errors.notfound\";\n        }\n        dispatch.repos.SET_REPOS(null);\n        dispatch.repos.SET_ERROR(errorMessage);\n      }\n    },\n  }),\n});\n","import english from \"./en.json\";\n\nexport default { english };\n","import styled from \"styled-components\";\n\nexport const ErrorMessage = styled.p`\n  color: #fc5c54;\n`;\n\nexport const DetailContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: space-between;\n  row-gap: 16px;\n`;\n","import styled, { keyframes } from \"styled-components\";\n\nconst bounce = keyframes`\n  0% {\n    top: 0;\n  }\n  50% {\n    top: -8px;\n  }\n  100% {\n\t  top: 0;\n  }\n`;\n\nexport const Bar = styled.div`\n  display: flex;\n  width: 100%;\n  height: 12px;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: 8px 0;\n`;\n\nexport const CircleWrapper = styled.div`\n  position: relative;\n  width: 12px;\n`;\n\nexport const Circle = styled.div`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  border: 3px solid #444b65;\n  background-color: transparent;\n  border-radius: 100%;\n`;\n\nexport const BouncingCircle = styled(Circle)`\n  animation: ${bounce} 1s ease infinite;\n  animation-delay: ${(props) => props.delay};\n`;\n","import React from \"react\";\nimport { BouncingCircle, CircleWrapper, Bar } from \"./elements\";\n\nfunction LoadingAnimation() {\n  return (\n    <Bar>\n      <CircleWrapper>\n        <BouncingCircle delay=\"-0.66s\" />\n      </CircleWrapper>\n      <CircleWrapper>\n        <BouncingCircle delay=\"-0.33s\" />\n      </CircleWrapper>\n      <CircleWrapper>\n        <BouncingCircle />\n      </CircleWrapper>\n    </Bar>\n  );\n}\n\nexport default LoadingAnimation;\n","import \"./Main.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet-async\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport AnimationLoading from \"components/AnimationLoading\";\n\nfunction MainLayout({ title, loading, children }) {\n  const { messages } = useIntl();\n  return (\n    <div className=\"Main\">\n      <Helmet title={messages[title]} />\n      <div className=\"wrapper\">\n        <div className=\"title\">\n          <h1>\n            <FormattedMessage id={title} />\n          </h1>\n        </div>\n        {loading ? (\n          <div className=\"loading-container\">\n            <div className=\"loading-inner-container\">\n              <AnimationLoading />\n            </div>\n          </div>\n        ) : (\n          <div className=\"container\">{children}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nMainLayout.propTypes = {\n  title: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nMainLayout.defaultProps = {\n  loading: false,\n};\n\nexport default MainLayout;\n","import styled from \"styled-components\";\n\nexport const DataCell = styled.td`\n  width: 70%;\n  border-bottom: ${(props) => (props.last ? \"none\" : \"1px solid #bcbcd5\")};\n  text-align: center;\n`;\n\nexport const HeaderCell = styled.th`\n  width: 30%;\n  padding: 12px 12px;\n  border-right: 1px solid #bcbcd5;\n  border-bottom: ${(props) => (props.last ? \"none\" : \"1px solid #bcbcd5\")};\n  text-align: center;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border: none;\n  border-collapse: collapse;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\nimport { DataCell, HeaderCell, Table } from \"./elements\";\n\nfunction DetailRow({ name, value, last }) {\n  return (\n    <tr>\n      <HeaderCell last={last}>\n        <FormattedMessage id={name} />\n      </HeaderCell>\n      <DataCell last={last}>{value}</DataCell>\n    </tr>\n  );\n}\n\nDetailRow.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  last: PropTypes.bool.isRequired,\n};\n\nfunction RepoDetails({ language, license, fork, parent }) {\n  const details = [\n    {\n      name: \"components.repodetails.content.language\",\n      value: language || \"-\",\n    },\n    {\n      name: \"components.repodetails.content.license\",\n      value: license || \"-\",\n    },\n    {\n      name: \"components.repodetails.content.forked\",\n      value: fork ? \"\\u2713\" : \"\\u2716\",\n    },\n    {\n      name: \"components.repodetails.content.parent\",\n      value: parent || \"-\",\n    },\n  ];\n  return (\n    <Table>\n      <tbody>\n        {details.map(({ name, value }, i) => (\n          <DetailRow\n            key={name}\n            name={name}\n            value={value}\n            last={details.length === i + 1}\n          />\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nRepoDetails.propTypes = {\n  language: PropTypes.string,\n  license: PropTypes.string,\n  fork: PropTypes.bool.isRequired,\n  parent: PropTypes.string,\n};\n\nexport default RepoDetails;\n","import styled from \"styled-components\";\n\nexport const Info = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  row-gap: 4px;\n`;\n\nexport const Title = styled.h2`\n  width: 100%;\n  margin: 0;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const Description = styled.p`\n  overflow: hidden;\n  width: 100%;\n  max-height: 30px;\n  margin: 0;\n  color: #586069;\n  font-size: 13px;\n  font-style: italic;\n  line-height: 15px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Description, Info, Title } from \"./elements\";\n\nfunction RepoInfo({ name, description }) {\n  return (\n    <Info>\n      <Title>{name}</Title>\n      <Description>\n        {description || (\n          <FormattedMessage id=\"components.repoinfo.content.nodescription\" />\n        )}\n      </Description>\n    </Info>\n  );\n}\n\nRepoInfo.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string,\n};\n\nexport default RepoInfo;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { useLocation } from \"@reach/router\";\nimport qs from \"qs\";\nimport { ErrorMessage, DetailContainer } from \"./elements\";\nimport MainLayout from \"layouts/Main\";\nimport RepoDetails from \"components/RepoDetails\";\nimport RepoInfo from \"components/RepoInfo\";\n\nfunction Details({ username }) {\n  const query = qs.parse(useLocation().search, { ignoreQueryPrefix: true });\n  const { repo } = query;\n  const dispatch = useDispatch();\n  const error = useSelector((state) => state.details.error);\n  const loading = useSelector(\n    (state) => state.loading.effects.details.fetchDetails\n  );\n  const details = useSelector((state) => state.details.details, shallowEqual);\n  const shouldFetch = repo && !error && (!details || details.name !== repo);\n  useEffect(() => {\n    if (shouldFetch) {\n      dispatch.details.fetchDetails({ username, repo });\n    }\n  }, [dispatch, shouldFetch, username, repo]);\n  return (\n    <MainLayout\n      title=\"containers.details.title\"\n      loading={shouldFetch || loading}\n    >\n      {!repo && (\n        <ErrorMessage>\n          <FormattedMessage id=\"containers.details.errors.missing\" />\n        </ErrorMessage>\n      )}\n      {error && (\n        <ErrorMessage>\n          <FormattedMessage id={error} />\n        </ErrorMessage>\n      )}\n      {details && (\n        <DetailContainer>\n          <RepoInfo name={details.name} description={details.description} />\n          <RepoDetails\n            language={details.language}\n            license={details.license}\n            fork={details.fork}\n            parent={details.parent}\n          />\n        </DetailContainer>\n      )}\n    </MainLayout>\n  );\n}\n\nDetails.propTypes = {\n  username: PropTypes.string,\n  repo: PropTypes.string,\n};\n\nexport default Details;\n","import styled from \"styled-components\";\n\nexport const ErrorBox = styled.p`\n  position: absolute;\n  top: 32px;\n  width: 75%;\n  padding: 8px 16px;\n  border: 1px solid #fc5c54;\n  margin: 0 auto;\n  background-color: #fc5c5422;\n  border-radius: 4px;\n  color: #fc5c54;\n`;\n\nexport const ProfileContainer = styled.div`\n  display: flex;\n  width: 350px;\n  max-width: 100%;\n  flex-direction: column;\n  row-gap: 12px;\n`;\n","import styled from \"styled-components\";\n\nexport const Bar = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  min-width: 120px;\n  height: 30px;\n  padding: 0 8px;\n  border: none;\n  background-color: #fc5c54;\n  border-radius: 15px;\n  color: white;\n  cursor: pointer;\n  text-transform: uppercase;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const TextInput = styled.input.attrs({\n  type: \"text\",\n})`\n  height: 30px;\n  padding: 0 8px;\n  border: 1px solid #bcbcd5;\n  border-radius: 15px;\n  &:focus {\n    outline: none;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Bar } from \"./elements\";\nimport { Button } from \"components/Inputs\";\n\nfunction ProfileNav({ onClose, onOpen }) {\n  return (\n    <Bar>\n      <Button onClick={() => onClose()}>\n        <FormattedMessage id=\"components.profilenav.inputs.close\" />\n      </Button>\n      <Button onClick={() => onOpen()}>\n        <FormattedMessage id=\"components.profilenav.inputs.open\" />\n      </Button>\n    </Bar>\n  );\n}\n\nProfileNav.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onOpen: PropTypes.func.isRequired,\n};\n\nexport default ProfileNav;\n","import styled from \"styled-components\";\n\nexport const Avatar = styled.img`\n  width: 120px;\n  height: 120px;\n  padding: 4px;\n  border: 1px solid #bcbcd5;\n`;\n\nexport const Bio = styled.span`\n  display: block;\n  font-style: italic;\n`;\n\nexport const Name = styled.h2`\n  margin: 0;\n`;\n\nexport const ProfileDetails = styled.div`\n  margin-left: 6px;\n`;\n\nexport const ViewContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Avatar, Bio, Name, ProfileDetails, ViewContainer } from \"./elements\";\n\nfunction ProfileView({ name, bio, avatarUrl }) {\n  return (\n    <ViewContainer>\n      <Avatar src={avatarUrl} alt=\"Avatar\" />\n      <ProfileDetails>\n        <Name>{name}</Name>\n        <Bio>{bio}</Bio>\n      </ProfileDetails>\n    </ViewContainer>\n  );\n}\n\nProfileView.propTypes = {\n  name: PropTypes.string.isRequired,\n  bio: PropTypes.string,\n  avatarUrl: PropTypes.string,\n};\n\nexport default ProfileView;\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  margin-bottom: 8px;\n`;\n\nexport const ErrorBox = styled.span`\n  display: block;\n  color: #fc5c54;\n  text-align: right;\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n`;\n\nexport const FormFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`;\n\nexport const LabelContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: space-between;\n  padding: 0 1px;\n  margin-bottom: 3px;\n`;\n\nexport const LabelText = styled.span`\n  font-weight: bold;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Field, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  ErrorBox,\n  Form,\n  FormFooter,\n  Label,\n  LabelContent,\n  LabelText,\n} from \"./elements\";\nimport { Button, TextInput } from \"components/Inputs\";\n\nfunction UsernameForm({ onSubmit }) {\n  return (\n    <Formik\n      initialValues={{ username: \"\" }}\n      validationSchema={Yup.object({\n        username: Yup.string()\n          .max(39, \"containers.profile.validation.maxlength\")\n          .matches(\n            /^[a-z\\d](?:[a-z\\d]|-(?=[a-z\\d])){0,38}$/i,\n            \"containers.profile.validation.characters\"\n          )\n          .required(\"containers.profile.validation.required\"),\n      })}\n      onSubmit={(values) => onSubmit(values)}\n    >\n      {(formikProps) => (\n        <Form\n          onReset={formikProps.handleReset}\n          onSubmit={formikProps.handleSubmit}\n        >\n          <Label>\n            <LabelContent>\n              <LabelText>\n                <FormattedMessage id=\"components.usernameform.inputs.username\" />\n              </LabelText>\n              {formikProps.errors.username && formikProps.touched.username && (\n                <ErrorBox>\n                  <FormattedMessage id={formikProps.errors.username} />\n                </ErrorBox>\n              )}\n            </LabelContent>\n            <Field id=\"username\" name=\"username\" as={TextInput} />\n          </Label>\n          <FormFooter>\n            <Button type=\"submit\">\n              <FormattedMessage id=\"components.usernameform.inputs.open\" />\n            </Button>\n          </FormFooter>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nUsernameForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default UsernameForm;\n","import React from \"react\";\nimport { useNavigate } from \"@reach/router\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport { ErrorBox, ProfileContainer } from \"./elements\";\nimport MainLayout from \"layouts/Main\";\nimport ProfileNav from \"components/ProfileNav\";\nimport ProfileView from \"components/ProfileView\";\nimport UsernameForm from \"components/UsernameForm\";\n\nfunction Profile() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const error = useSelector((state) => state.profile.error);\n  const loading = useSelector(\n    (state) => state.loading.effects.profile.fetchProfile\n  );\n  const profile = useSelector((state) => state.profile.profile, shallowEqual);\n  return (\n    <MainLayout title={\"containers.profile.title\"} loading={loading}>\n      {error && (\n        <ErrorBox>\n          <FormattedMessage id={error} />\n        </ErrorBox>\n      )}\n      {profile ? (\n        <ProfileContainer>\n          <ProfileView\n            name={profile.name || profile.login}\n            bio={profile.bio}\n            avatarUrl={profile.avatarUrl}\n          />\n          <ProfileNav\n            onClose={() => dispatch.profile.SET_PROFILE(null)}\n            onOpen={() => navigate(\"/repos/\" + profile.login)}\n          />\n        </ProfileContainer>\n      ) : (\n        <ProfileContainer>\n          <UsernameForm\n            onSubmit={({ username }) => dispatch.profile.fetchProfile(username)}\n          />\n        </ProfileContainer>\n      )}\n    </MainLayout>\n  );\n}\n\nexport default Profile;\n","import styled from \"styled-components\";\n\nexport const ErrorMessage = styled.p`\n  color: #fc5c54;\n`;\n\nexport const ListContainer = styled.div`\n  flex-grow: 1;\n  overflow-y: scroll;\n`;\n\nexport const ReposContainer = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  flex-grow: 1;\n  row-gap: 20px;\n`;\n","import styled from \"styled-components\";\n\nexport const Form = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  row-gap: 8px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  column-gap: 8px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Form, Label } from \"./elements\";\nimport { TextInput } from \"components/Inputs\";\n\nfunction RepoFilter({ onNameChange, onSortChange }) {\n  return (\n    <Form>\n      <Label>\n        <FormattedMessage id=\"components.repofilter.inputs.name\" />\n        <TextInput\n          id=\"repoName\"\n          name=\"repoName\"\n          onChange={(e) => onNameChange(e.target.value)}\n        />\n      </Label>\n      <Label>\n        <input\n          type=\"checkbox\"\n          id=\"sortStars\"\n          name=\"sortStars\"\n          onChange={(e) => onSortChange(e.target.checked)}\n        />\n        <FormattedMessage id=\"components.repofilter.inputs.sort\" />\n      </Label>\n    </Form>\n  );\n}\n\nRepoFilter.propTypes = {\n  onNameChange: PropTypes.func.isRequired,\n  onSortChange: PropTypes.func.isRequired,\n};\n\nexport default RepoFilter;\n","import styled from \"styled-components\";\n\nexport const Body = styled.tbody`\n  font-style: italic;\n`;\n\nexport const Header = styled.thead`\n  font-weight: bold;\n`;\n\nexport const RepoDataCell = styled.td`\n  overflow: hidden;\n  width: 80%;\n  max-width: 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const RepoHeaderCell = styled.td`\n  width: 80%;\n`;\n\nexport const RepoLink = styled.a`\n  color: #000;\n  cursor: pointer;\n  font-size: 13px;\n  text-decoration: underline;\n  transition: font-size 250ms;\n  &:hover {\n    font-size: 14px;\n  }\n`;\n\nexport const StarDataCell = styled.td`\n  width: 20%;\n  font-size: 13px;\n  text-align: center;\n`;\n\nexport const StarHeaderCell = styled.th`\n  width: 20%;\n  text-align: center;\n`;\n\nexport const Table = styled.table`\n  overflow: hidden;\n  width: 100%;\n  max-width: 100%;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\nimport {\n  Body,\n  Header,\n  RepoDataCell,\n  RepoHeaderCell,\n  RepoLink,\n  StarDataCell,\n  StarHeaderCell,\n  Table,\n} from \"./elements\";\n\nfunction RepoList({ onRepo, repos }) {\n  return (\n    <Table>\n      <Header>\n        <tr>\n          <RepoHeaderCell>\n            <FormattedMessage id=\"components.repolist.repo\" />\n          </RepoHeaderCell>\n          <StarHeaderCell>\n            <FormattedMessage id=\"components.repolist.stars\" />\n          </StarHeaderCell>\n        </tr>\n      </Header>\n      <Body>\n        {repos.map((repo) => (\n          <tr key={repo.id}>\n            <RepoDataCell>\n              <RepoLink\n                href={\"#\" + repo.name}\n                onClick={(e) => {\n                  e.preventDefault();\n                  onRepo(repo.id);\n                }}\n              >\n                {repo.name}\n              </RepoLink>\n            </RepoDataCell>\n            <StarDataCell>{repo.stars}</StarDataCell>\n          </tr>\n        ))}\n      </Body>\n    </Table>\n  );\n}\n\nRepoList.propTypes = {\n  onRepo: PropTypes.func.isRequired,\n  repos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      stars: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default RepoList;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"@reach/router\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { FormattedMessage } from \"react-intl\";\nimport { ErrorMessage, ListContainer, ReposContainer } from \"./elements\";\nimport MainLayout from \"layouts/Main\";\nimport RepoFilter from \"components/RepoFilter\";\nimport RepoList from \"components/RepoList\";\n\nfunction Repos({ username }) {\n  const [owner, setOwner] = useState(null);\n  const [filterName, setFilterName] = useState(\"\");\n  const [filterSortStars, setFilterSortStars] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const error = useSelector((state) => state.repos.error);\n  const loading = useSelector(\n    (state) => state.loading.effects.repos.fetchRepos\n  );\n  const repos = useSelector((state) => state.repos.repos, shallowEqual);\n  const shouldFetch = !loading && !error && (!repos || owner !== username);\n  useEffect(() => {\n    if (shouldFetch) {\n      dispatch.repos.fetchRepos(username);\n      setOwner(username);\n    }\n  }, [dispatch, setOwner, username, shouldFetch]);\n  const mappedRepos =\n    Array.isArray(repos) &&\n    repos\n      .slice()\n      .filter(({ name }) => name.startsWith(filterName))\n      .sort((a, b) => {\n        const sortBy = filterSortStars ? \"stars\" : \"id\";\n        return b[sortBy] - a[sortBy];\n      })\n      .map((repo) => ({\n        id: repo.id,\n        name: repo.fullName,\n        stars: repo.stars,\n      }));\n  return (\n    <MainLayout title=\"containers.repos.title\" loading={shouldFetch || loading}>\n      {error && (\n        <ErrorMessage>\n          <FormattedMessage id={error} />\n        </ErrorMessage>\n      )}\n      {Array.isArray(repos) && (\n        <ReposContainer>\n          <RepoFilter\n            onNameChange={setFilterName}\n            onSortChange={setFilterSortStars}\n          />\n          <ListContainer>\n            <RepoList\n              onRepo={(id) => {\n                const repo = repos.find((repo) => repo.id === id);\n                navigate(`/details/${owner}?repo=${repo.name}`);\n              }}\n              repos={mappedRepos}\n            />\n          </ListContainer>\n        </ReposContainer>\n      )}\n    </MainLayout>\n  );\n}\n\nRepos.propTypes = {\n  username: PropTypes.string,\n};\n\nexport default Repos;\n","import React from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { Provider } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport { Router } from \"@reach/router\";\nimport createStore from \"./createStore\";\nimport Translations from \"./translations\";\nimport Details from \"containers/Details\";\nimport Profile from \"containers/Profile\";\nimport Repos from \"containers/Repos\";\n\nconst store = createStore();\n\nfunction App() {\n  return (\n    <HelmetProvider>\n      <Provider store={store}>\n        <IntlProvider messages={Translations.english} locale=\"en\">\n          <Helmet\n            titleTemplate=\"GitHub Explorer - %s\"\n            defaultTitle=\"GitHub Explorer\"\n          />\n          <Router style={{ height: \"100%\", outline: \"none\" }}>\n            <Profile default />\n            <Repos path=\"/repos/:username\" />\n            <Details path=\"/details/:username\" />\n          </Router>\n        </IntlProvider>\n      </Provider>\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","import * as Rematch from \"@rematch/core\";\nimport loadingPlugin from \"@rematch/loading\";\nimport immerPlugin from \"@rematch/immer\";\nimport selectPlugin from \"@rematch/select\";\nimport models from \"models\";\n\nexport default function createStore() {\n  const plugins = [immerPlugin(), loadingPlugin(), selectPlugin()];\n  const store = Rematch.init({\n    models,\n    plugins,\n  });\n  return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}